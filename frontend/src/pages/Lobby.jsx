import React, { useState, useEffect } from "react"
import { useParams } from "react-router-dom"
import {
  Button,
  Input,
  Modal,
  ModalBody,
  ModalContent,
  ModalFooter,
  ModalHeader,
  useDisclosure,
} from "@nextui-org/react"
import { socket } from "../services/socket"

export default function Lobby() {
  const { code } = useParams() // –ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã –∏–∑ URL
  const [players, setPlayers] = useState([]) // –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤ –ª–æ–±–±–∏
  const [nickname, setNickname] = useState(
    localStorage.getItem("nickname") || ""
  ) // –ù–∏–∫–Ω–µ–π–º –∏–∑ localStorage
  const [newNickname, setNewNickname] = useState("") // –í—Ä–µ–º–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const { isOpen, onOpen, onOpenChange } = useDisclosure()

  const joinRoom = (nick) => {
    socket.emit("joinRoom", { roomCode: code, nickname: nick })

    socket.on("joinedRoom", ({ players }) => {
      setPlayers(players) // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
      onOpenChange(false) // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    })

    socket.on("playerJoined", ({ players }) => {
      setPlayers(players) // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    })

    socket.on("playerDisconnected", ({ players }) => {
      setPlayers(players) // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    })

    socket.on("error", (error) => {
      console.error(error.message) // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    })
  }

  useEffect(() => {
    if (!nickname) {
      onOpen() // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    } else {
      joinRoom(nickname) // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ
    }

    return () => {
      // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      socket.off("joinedRoom")
      socket.off("playerJoined")
      socket.off("playerDisconnected")
      socket.off("error")
    }
  }, [nickname, code])

  const handleJoinClick = () => {
    const trimmedNickname = newNickname.trim()
    if (!trimmedNickname) {
      alert("–ù–∏–∫–Ω–µ–π–º –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
      return
    }

    localStorage.setItem("nickname", trimmedNickname)
    setNickname(trimmedNickname) // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    joinRoom(trimmedNickname) // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ
  }

  return (
    <div className="flex flex-col items-center gap-4">
      <h1 className="text-2xl font-bold">–õ–æ–±–±–∏ –∫–æ–º–Ω–∞—Ç—ã {code}</h1>
      <h2>–ò–≥—Ä–æ–∫–∏:</h2>
      <ul>
        {players.map((player, index) => (
          <li key={index}>
            {player.nickname} - {player.status === "connected" ? "üü¢" : "üî¥"}
          </li>
        ))}
      </ul>

      <Modal
        isOpen={isOpen}
        placement="auto"
        onOpenChange={onOpenChange}
        backdrop="blur"
      >
        <ModalContent>
          {(onClose) => (
            <>
              <ModalHeader>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º</ModalHeader>
              <ModalBody>
                <Input
                  fullWidth
                  clearable
                  label="–ù–∏–∫–Ω–µ–π–º"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º"
                  value={newNickname}
                  onChange={(e) => setNewNickname(e.target.value)}
                />
              </ModalBody>
              <ModalFooter>
                <Button onClick={handleJoinClick}>–í–æ–π—Ç–∏</Button>
              </ModalFooter>
            </>
          )}
        </ModalContent>
      </Modal>
    </div>
  )
}
